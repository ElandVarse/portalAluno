{"version":3,"sources":["assets/undraw_fill.svg","pages/home/Header/header.js","pages/home/Article/article.js","pages/home/Main/main.js","pages/home/home.js","pages/login/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","size","color","esconder","document","querySelector","classList","toggle","btnValor","innerHTML","Article","class","href","target","id","onClick","Main","Home","Login","src","fill","alt","type","placeholder","Routes","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,yC,8PCwB5BC,EAjBA,kBACZ,gCACI,6BACK,4BACI,gEACA,2DACA,iEAGJ,kBAAC,IAAD,CAAMC,UAAU,OAAOC,GAAG,KACtB,kBAAC,IAAD,CAAUC,KAAM,GAAIC,MAAM,YAD9B,W,YCbZ,SAASC,IACLC,SAASC,cAAc,eAAeC,UAAUC,OAAO,QAEvD,IAAIC,EAAWJ,SAASC,cAAc,QAEZ,YAAvBG,EAASC,UACRD,EAASC,UAAU,WAEnBD,EAASC,UAAU,UAI3B,IA4BeC,EA5BC,kBACZ,iCACI,yBAAKX,UAAU,YAEX,yBAAKA,UAAU,OACX,6EACA,uBAAGY,MAAM,SAAT,sQACA,uBAAGA,MAAM,UAAS,uBAAGC,KAAK,2BAA2BC,OAAO,SAA1C,4BAGtB,gEAEA,yBAAKd,UAAU,mBACX,4BACI,mJACA,kNACA,oJACA,kMACA,uKAIR,4BAAQe,GAAG,MAAMC,QAASZ,EAAUJ,UAAU,OAA9C,cCPGiB,EA1BF,kBACT,8BACI,yBAAKL,MAAM,eAEP,yBAAKA,MAAM,QACP,qDACA,gDACA,8CAGJ,yBAAKA,MAAM,UACP,gDACA,qDAGJ,yBAAKA,MAAM,OACP,sCACA,6CAIR,+CACA,kBAAC,EAAD,QCfOM,EAPF,kBACX,yBAAKlB,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,yBCwBWmB,EAvBD,kBACV,yBAAKnB,UAAU,mBACf,4BAAI,sCAAJ,sBAEI,6BAASA,UAAU,QACf,yBAAKoB,IAAKC,IAAMC,IAAI,WAEpB,8BACI,qCACA,2BAAOC,KAAK,OAAOC,YAAY,iBAC/B,2BAAOD,KAAK,WAAUC,YAAY,UAClC,kBAAC,IAAD,CAAMvB,GAAG,SACL,4BAAQsB,KAAK,UAAb,aAEJ,kBAAC,IAAD,CAAMvB,UAAU,OAAOC,GAAG,KACtB,kBAAC,IAAD,CAASC,KAAM,GAAIC,MAAM,cAD7B,2BCdD,SAASsB,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAWV,IACrC,kBAAC,IAAD,CAAOQ,KAAK,IAAIE,UAAWT,MCR3C,IAIeU,EAJH,kBACN,kBAACJ,EAAD,OCMcK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAAS/B,SAASgC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1ce2ad9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_fill.f91b538c.svg\";","import React from 'react';\nimport './header.css'\n\nimport { Link, useHistory } from 'react-router-dom'\nimport {FiLogOut} from 'react-icons/fi'\n\n\nconst Header = () => (\n   <header>\n       <nav>\n            <ul>\n                <li>Orientação de Matrícula</li>\n                <li>Comprovante de Matrícula</li>\n                <li>Solicitação de Disciplinas</li>\n            </ul>\n\n            <Link className='link' to=\"/\">\n                <FiLogOut size={16} color=\"#E02041\"/>\n                Sair\n            </Link>\n       </nav>\n    </header>\n);\n\nexport default Header","import React from 'react'\nimport './article.css'\n\nfunction esconder(){\n    document.querySelector(\".instrucoes\").classList.toggle(\"hide\");\n    \n    let btnValor = document.querySelector('#btn');\n\n    if(btnValor.innerHTML === 'Mostrar'){\n        btnValor.innerHTML='Esconder';\n    } else{\n        btnValor.innerHTML='Mostrar';\n    }    \n}\n\nconst Article = () =>(\n    <article>\n        <div className='conteudo'>\n\n            <div className='pae'>\n                <h3>Programa de Assistência e Apoio Estudantil</h3>\n                <p class='texto'>O IFBA possui uma política de assistência estudantil com o objetivo de contribuir com sua permanência na Instituição. O programa de Assistência e apoio aos estudantes PAAE disponibiliza bolsas e auxílios aos estudantes que mais precisam.</p>\n                <p class='clique'><a href='https://pae.ifba.edu.br/' target='blank'> Clique e inscreva-se!</a></p>\n            </div>\n\n            <h3>Instruções de Matrícula</h3>\n\n            <div className='instrucoes hide'>\n                <ol>\n                    <li>Clique no botão avaliar e faça a avaliação institucional das disciplinas que cursou no semestre passado</li>\n                    <li>Clique em \"Solicitação de Disciplinas\" e monte o horário que considera ideal para você. Fique atento às mensagens que o sistema mostra a cada escolha de disciplina</li>\n                    <li>Ao finalizar a escolha clique no botão finalizar solicitação. Só assim a sua escolha será registrada.</li>\n                    <li>Clique no botão Lista de Prioridades e monte uma lista de prioridade das disciplinas disponíveis para você. O menor número significa maior prioridade.</li>\n                    <li>o dia indicado pelo Calendário Acadêmico do Campus será divulgado o resultado da alocação das disciplinas solicitadas.</li>\n                </ol>\n            </div>\n\n            <button id='btn' onClick={esconder} className='btn'>Mostrar</button>\n            \n        </div>\n    </article>\n)\n\nexport default Article;","import React from 'react'\nimport './main.css'\nimport Article from '../Article/article'\n\nconst Main = () => (\n    <main>\n        <div class='LeftSideBar'>\n\n            <div class='topo'>\n                <h2>Matrícula: 112254 </h2>\n                <h2>Nome: John Wick </h2>\n                <h2>Curso: Matrix</h2>\n            </div>  \n\n            <div class='centro'>\n                <p>Rendimento: 100,0</p>\n                <p>Aproveitamento: 100,0</p>\n            </div>\n\n            <div class='fim'>\n                <a>Boletim</a>\n                <a>Histórico</a>\n            </div>\n        </div>\n        \n        <h1>Portal do Aluno</h1>    \n        <Article />\n    </main>\n)\n\nexport default Main","import React from 'react';\nimport Header from './Header/header.js'\nimport Main from './Main/main.js'\n\nconst Home = () =>(\n  <div className='home'>\n    <Header />\n    <Main />\n  </div>\n  )\n\nexport default Home;\n","import React from 'react'\nimport './login.css';\n\nimport { Link } from 'react-router-dom'\n\nimport fill from '../../assets/undraw_fill.svg'\nimport {FiLogIn} from 'react-icons/fi'\n\nconst Login = () => (\n    <div className='login-container'>\n    <h1><span>IFBA</span> - Portal do Aluno</h1>\n\n        <section className='form'>\n            <img src={fill} alt=\"Fillin\"/>\n            \n            <form>\n                <h2>Login</h2>\n                <input type='text' placeholder='Matrícula'></input>\n                <input type='password'placeholder='Senha'></input>\n                <Link to=\"/home\"> \n                    <button type='submit'> Acessar</button>\n                </Link>\n                <Link className='link' to=\"/\">\n                    <FiLogIn size={16} color=\"#0000ffaa\"/>\n                    Esqueci minha senha\n                </Link>\n            </form>\n        </section>\n    </div>\n)\n\nexport default Login;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nimport Home from './pages/home/home';\nimport Login from './pages/login';\n\n\nexport default function Routes(){\n    return(\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/home\" exact component={Home} />\n                <Route path=\"/\" component={Login} />\n            </Switch>\n        </BrowserRouter>\n    )\n}","import React from 'react';\nimport './global.css'\nimport Routes from './routes';\n\n\nconst App = () =>(\n      <Routes />\n  )\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}